---

domains:
#
# Approximate the metric format of io.prometheus.simpleclient_hotspot
#
- name: java.lang
  beans:
  - pattern: type=Memory
    attributes:
    - HeapMemoryUsage.committed: gauge
    - HeapMemoryUsage.used: gauge
    - HeapMemoryUsage.max: gauge
    - HeapMemoryUsage.init: gauge
    - NonHeapMemoryUsage.committed: gauge
    - NonHeapMemoryUsage.used: gauge
    - NonHeapMemoryUsage.max: gauge
    - NonHeapMemoryUsage.init: gauge
    metric: "jvm_memory_bytes_${attribute | rightof .}"
    labels:
      area: "${attribute | leftof Memory | lower}"
  - pattern: type=MemoryPool,name=*
    attributes:
    - Usage.committed: gauge
    - Usage.used: gauge
    - Usage.max: gauge
    - Usage.init: gauge
    metric: "jvm_memory_pool_bytes_${attribute | rightof .}"
    labels:
      pool: "${keyprop name}"
  - pattern: type=ClassLoading
    attributes:
    - LoadedClassCount: gauge
    - TotalLoadedClassCount: counter
    - UnloadedClassCount: counter
    metric: "jvm_classes_${attribute | replace TotalLoadedClassCount loaded_total | replace UnloadedClassCount unloaded_total | replace LoadedClassCount loaded}"
  - pattern: type=Threading
    attributes:
    - ThreadCount: gauge
    - DaemonThreadCount: gauge
    - PeakThreadCount: gauge
    - TotalStartedThreadCount: counter
    metric: "jvm_threads_${attribute | replace Thread | replace DaemonCount daemon | replace PeakCount peak | replace TotalStartedCount started_total | replace Count current}"
  - pattern: type=GarbageCollector,name=*
    attributes:
    - CollectionCount: counter
    - CollectionTime: counter
    metric: "jvm_gc_collection_seconds_${attribute | replace Collection | replace Time sum | lower}"
    labels:
      gc: "${keyprop name}"

