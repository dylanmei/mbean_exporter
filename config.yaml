---

domains:
#
# Approximate the metric format of io.prometheus.simpleclient_hotspot
#
- name: java.lang
  beans:
  - query: type=Memory
    attributes:
    - HeapMemoryUsage.committed: gauge
    - HeapMemoryUsage.used: gauge
    - HeapMemoryUsage.max: gauge
    - HeapMemoryUsage.init: gauge
    - NonHeapMemoryUsage.committed: gauge
    - NonHeapMemoryUsage.used: gauge
    - NonHeapMemoryUsage.max: gauge
    - NonHeapMemoryUsage.init: gauge
    metric: "jvm_memory_bytes_${attribute | rightof .}"
    labels:
      area: "${attribute | leftof Memory | lower}"
  - query: type=MemoryPool,name=*
    attributes:
    - Usage.committed: gauge
    - Usage.used: gauge
    - Usage.max: gauge
    - Usage.init: gauge
    metric: "jvm_memory_pool_bytes_${attribute | rightof .}"
    labels:
      pool: "${keyprop name}"
  - query: type=ClassLoading
    attributes:
    - LoadedClassCount: gauge
    - TotalLoadedClassCount: counter
    - UnloadedClassCount: counter
    metric: "jvm_classes_${attribute | replace TotalLoadedClassCount loaded_total | replace UnloadedClassCount unloaded_total | replace LoadedClassCount loaded}"
  - query: type=Threading
    attributes:
    - ThreadCount: gauge
    - DaemonThreadCount: gauge
    - PeakThreadCount: gauge
    - TotalStartedThreadCount: counter
    metric: "jvm_threads_${attribute | replace Thread | replace DaemonCount daemon | replace PeakCount peak | replace TotalStartedCount started_total | replace Count current}"
  - query: type=GarbageCollector,name=*
    attributes:
    - CollectionCount: counter
    - CollectionTime: counter
    metric: "jvm_gc_collection_seconds_${attribute | replace Collection | replace Time sum | lower}"
    labels:
      gc: "${keyprop name}"

#
# Kafka broker metrics
#
- name: kafka.controller
  beans:
  - query: "type=KafkaController,name=*"
    attributes:
    - Value: gauge
    metric: "${domain}_${keyprop name | snake}"
  - query: "type=ControllerStats,name=*"
    attributes:
    - Count: counter
    metric: "${domain}_${keyprop name | replace RateAndTimeMs | replace PerSec | snake}_${attribute | replace Count total}"
- name: kafka.coordinator.group
  beans:
  - query: "type=GroupMetadataManager,name=*"
    attributes:
    - Value: gauge
    metric: "kafka_group_coordinator_${keyprop name | snake}"
- name: kafka.log
  beans:
  - query: "type=LogFlushStats,name=LogFlushRateAndTimeMs"
    attributes:
    - Count: counter
    - Mean: gauge
    metric: "kafka_log_flush_${attribute | replace Count total | replace Mean avg_time}"
  - query: "type=Log,name=Size,topic=*,partition=*"
    attributes:
    - Value: gauge
    metric: "kafka_log_partition_size"
    labels:
      topic: "${keyprop topic}"
      partition: "${keyprop partition}"
- name: kafka.network
  beans:
  - query: "type=Processor,name=*,networkProcessor=*"
    attributes:
    - Value: gauge
    metric: "kafka_broker_network_processor_${keyprop name | snake}"
    labels:
      network_processor: "${keyprop networkProcessor}"
  - query: "type=SocketServer,name=NetworkProcessorAvgIdlePercent"
    attributes:
    - Value: gauge
    metric: "kafka_broker_${keyprop name | snake}"
  - query: "type=RequestChannel,name=*"
    attributes:
    - Value: gauge
    metric: "kafka_broker_${keyprop name | snake}"
- name: kafka.server
  beans:
  - query: "type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent"
    attributes:
    - OneMinuteRate: gauge
    metric: "kafka_broker_${keyprop name | snake}"
  - query: "type=BrokerTopicMetrics,name=*"
    attributes:
    - Count: counter
    metric: "kafka_topics_${keyprop name | replace PerSec | replace Total | snake}_${attribute | replace Count total}"
  - query: "type=BrokerTopicMetrics,name=*,topic=*"
    attributes:
    - Count: counter
    metric: "kafka_topic_${keyprop name | replace PerSec | replace Total | snake}_${attribute | replace Count total}"
    labels:
      topic: "${keyprop topic}"
  - query: "type=ReplicaManager,name=*Count"
    attributes:
    - Value: gauge
    metric: "kafka_broker_${keyprop name | snake}"
  - query: "type=ReplicaManager,name=UnderReplicatedPartitions"
    attributes:
    - Value: gauge
    metric: "kafka_broker_under_replicated_partition_count"
  - query: "type=ReplicaManager,name=*PerSec"
    attributes:
    - Count: counter
    metric: "kafka_broker_${keyprop name | replace PerSec | snake}_${attribute | replace Count total}"
  - query: "type=socket-server-metrics,*"
    attributes:
    - connection-creation-total: counter
    - connection-close-total: counter
    - failed-authentication-total: counter
    - failed-reauthentication-total: counter
    - incoming-byte-total: counter
    - iotime-total: counter
    - io-waittime-total: counter
    - network-io-total: counter
    - outgoing-byte-total: counter
    - request-total: counter
    - response-total: counter
    - select-total: counter
    - successful-authentication-total: counter
    - successful-reauthentication-total: counter
    metric: "kafka_broker_${attribute | snake}"
    labels:
      listener: "${keyprop listener | lower}"
      network_processor: "${keyprop networkProcessor}"

